{"ast":null,"code":"var _jsxFileName = \"/Users/wallc/Downloads/Synergy7-main/react-dashboard/src/components/SystemHealth.js\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { Box, Typography, Grid, Card, CardContent, LinearProgress, Chip, List, ListItem, ListItemIcon, ListItemText } from '@mui/material';\nimport { CheckCircle, Warning, Error, Speed, Security, Cloud, Storage, NetworkCheck } from '@mui/icons-material';\nimport { useTrading } from '../context/TradingContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction SystemHealth() {\n  _s();\n  const {\n    state\n  } = useTrading();\n  const healthMetrics = [{\n    category: 'Trading Engine',\n    status: state.trading.isActive ? 'excellent' : 'good',\n    value: state.trading.isActive ? 100 : 85,\n    description: 'Core trading algorithms and execution engine',\n    components: [{\n      name: 'Signal Generation',\n      status: 'online'\n    }, {\n      name: 'Position Sizing',\n      status: 'online'\n    }, {\n      name: 'Risk Management',\n      status: 'online'\n    }, {\n      name: 'Strategy Selection',\n      status: state.trading.isActive ? 'online' : 'standby'\n    }]\n  }, {\n    category: 'Network Infrastructure',\n    status: state.isConnected ? 'excellent' : 'poor',\n    value: state.isConnected ? 95 : 30,\n    description: 'RPC endpoints and blockchain connectivity',\n    components: [{\n      name: 'QuickNode RPC',\n      status: state.isConnected ? 'online' : 'offline'\n    }, {\n      name: 'Helius RPC',\n      status: state.isConnected ? 'online' : 'offline'\n    }, {\n      name: 'Jito Block Engine',\n      status: 'online'\n    }, {\n      name: 'Jupiter API',\n      status: 'online'\n    }]\n  }, {\n    category: 'Security & Protection',\n    status: 'excellent',\n    value: 100,\n    description: 'MEV protection and transaction security',\n    components: [{\n      name: 'MEV Protection',\n      status: 'online'\n    }, {\n      name: 'Bundle Execution',\n      status: 'online'\n    }, {\n      name: 'Slippage Control',\n      status: 'online'\n    }, {\n      name: 'Wallet Security',\n      status: 'online'\n    }]\n  }, {\n    category: 'Data & Analytics',\n    status: 'good',\n    value: 88,\n    description: 'Market data feeds and performance tracking',\n    components: [{\n      name: 'Price Feeds',\n      status: 'online'\n    }, {\n      name: 'Market Data',\n      status: 'online'\n    }, {\n      name: 'Performance Tracking',\n      status: 'online'\n    }, {\n      name: 'Whale Monitoring',\n      status: 'warning'\n    }]\n  }];\n  const getStatusColor = status => {\n    switch (status) {\n      case 'excellent':\n        return 'success';\n      case 'good':\n        return 'info';\n      case 'warning':\n        return 'warning';\n      case 'poor':\n        return 'error';\n      default:\n        return 'default';\n    }\n  };\n  const getStatusIcon = status => {\n    switch (status) {\n      case 'online':\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          sx: {\n            color: 'success.main',\n            fontSize: 16\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 16\n        }, this);\n      case 'warning':\n        return /*#__PURE__*/_jsxDEV(Warning, {\n          sx: {\n            color: 'warning.main',\n            fontSize: 16\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 16\n        }, this);\n      case 'offline':\n        return /*#__PURE__*/_jsxDEV(Error, {\n          sx: {\n            color: 'error.main',\n            fontSize: 16\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 16\n        }, this);\n      case 'standby':\n        return /*#__PURE__*/_jsxDEV(Speed, {\n          sx: {\n            color: 'info.main',\n            fontSize: 16\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 16\n        }, this);\n      default:\n        return /*#__PURE__*/_jsxDEV(CheckCircle, {\n          sx: {\n            color: 'success.main',\n            fontSize: 16\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 16\n        }, this);\n    }\n  };\n  const overallHealth = healthMetrics.reduce((acc, metric) => acc + metric.value, 0) / healthMetrics.length;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    sx: {\n      flexGrow: 1,\n      p: 3\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      sx: {\n        mb: 4\n      },\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h4\",\n        sx: {\n          fontWeight: 600,\n          mb: 1\n        },\n        children: \"System Health Monitor\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        sx: {\n          color: 'text.secondary'\n        },\n        children: \"Comprehensive monitoring of all trading system components\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mb: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            alignItems: 'center',\n            mb: 3\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            sx: {\n              fontWeight: 600\n            },\n            children: \"Overall System Health\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Chip, {\n            label: `${overallHealth.toFixed(0)}% Operational`,\n            color: overallHealth >= 95 ? 'success' : overallHealth >= 80 ? 'info' : overallHealth >= 60 ? 'warning' : 'error',\n            size: \"large\",\n            sx: {\n              fontWeight: 600\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n          variant: \"determinate\",\n          value: overallHealth,\n          sx: {\n            height: 12,\n            borderRadius: 6,\n            backgroundColor: 'rgba(0,0,0,0.1)',\n            '& .MuiLinearProgress-bar': {\n              borderRadius: 6,\n              backgroundColor: overallHealth >= 95 ? 'success.main' : overallHealth >= 80 ? 'info.main' : overallHealth >= 60 ? 'warning.main' : 'error.main'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          sx: {\n            display: 'flex',\n            justifyContent: 'space-between',\n            mt: 2\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"text.secondary\",\n            children: \"System Performance Score\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            sx: {\n              fontWeight: 600\n            },\n            children: [overallHealth.toFixed(1), \"/100\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: healthMetrics.map((metric, index) => /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          sx: {\n            height: '100%'\n          },\n          children: /*#__PURE__*/_jsxDEV(CardContent, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                display: 'flex',\n                justifyContent: 'space-between',\n                alignItems: 'center',\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"h6\",\n                sx: {\n                  fontWeight: 500\n                },\n                children: metric.category\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                label: metric.status,\n                color: getStatusColor(metric.status),\n                size: \"small\",\n                sx: {\n                  textTransform: 'capitalize'\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 177,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              sx: {\n                mb: 2\n              },\n              children: metric.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              sx: {\n                mb: 2\n              },\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                sx: {\n                  display: 'flex',\n                  justifyContent: 'space-between',\n                  mb: 1\n                },\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  color: \"text.secondary\",\n                  children: \"Health Score\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  sx: {\n                    fontWeight: 600\n                  },\n                  children: [metric.value, \"%\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n                variant: \"determinate\",\n                value: metric.value,\n                color: getStatusColor(metric.status),\n                sx: {\n                  height: 6,\n                  borderRadius: 3,\n                  backgroundColor: 'rgba(0,0,0,0.1)',\n                  '& .MuiLinearProgress-bar': {\n                    borderRadius: 3\n                  }\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(List, {\n              dense: true,\n              children: metric.components.map((component, compIndex) => /*#__PURE__*/_jsxDEV(ListItem, {\n                sx: {\n                  px: 0,\n                  py: 0.5\n                },\n                children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                  sx: {\n                    minWidth: 24\n                  },\n                  children: getStatusIcon(component.status)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  primary: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    sx: {\n                      fontSize: '0.875rem'\n                    },\n                    children: component.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(Chip, {\n                  label: component.status,\n                  size: \"small\",\n                  variant: \"outlined\",\n                  sx: {\n                    fontSize: '0.7rem',\n                    height: 20,\n                    textTransform: 'capitalize'\n                  },\n                  color: component.status === 'online' ? 'success' : component.status === 'warning' ? 'warning' : component.status === 'offline' ? 'error' : 'info'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 23\n                }, this)]\n              }, compIndex, true, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 21\n              }, this))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 172,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 13\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Card, {\n      sx: {\n        mt: 4\n      },\n      children: /*#__PURE__*/_jsxDEV(CardContent, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          sx: {\n            fontWeight: 500,\n            mb: 2\n          },\n          children: \"System Information\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 253,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: \"Uptime\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                fontWeight: 600\n              },\n              children: [state.system.uptime || 0, \" minutes\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 257,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: \"Total Trades\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 266,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                fontWeight: 600\n              },\n              children: state.trading.totalTrades\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: \"Success Rate\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 274,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                fontWeight: 600\n              },\n              children: [state.trading.winRate.toFixed(1), \"%\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 277,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 273,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 3,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"text.secondary\",\n              children: \"Last Update\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body1\",\n              sx: {\n                fontWeight: 600\n              },\n              children: state.system.lastUpdate ? new Date(state.system.lastUpdate).toLocaleTimeString() : 'Never'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 285,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 256,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 252,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 251,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 114,\n    columnNumber: 5\n  }, this);\n}\n_s(SystemHealth, \"qaqn2resZoTjAEyt6fzpVrOYXXg=\", false, function () {\n  return [useTrading];\n});\n_c = SystemHealth;\nexport default SystemHealth;\nvar _c;\n$RefreshReg$(_c, \"SystemHealth\");","map":{"version":3,"names":["React","Box","Typography","Grid","Card","CardContent","LinearProgress","Chip","List","ListItem","ListItemIcon","ListItemText","CheckCircle","Warning","Error","Speed","Security","Cloud","Storage","NetworkCheck","useTrading","jsxDEV","_jsxDEV","SystemHealth","_s","state","healthMetrics","category","status","trading","isActive","value","description","components","name","isConnected","getStatusColor","getStatusIcon","sx","color","fontSize","fileName","_jsxFileName","lineNumber","columnNumber","overallHealth","reduce","acc","metric","length","flexGrow","p","children","mb","variant","fontWeight","display","justifyContent","alignItems","label","toFixed","size","height","borderRadius","backgroundColor","mt","container","spacing","map","index","item","xs","md","textTransform","dense","component","compIndex","px","py","minWidth","primary","sm","system","uptime","totalTrades","winRate","lastUpdate","Date","toLocaleTimeString","_c","$RefreshReg$"],"sources":["/Users/wallc/Downloads/Synergy7-main/react-dashboard/src/components/SystemHealth.js"],"sourcesContent":["import React from 'react';\nimport {\n  Box,\n  Typography,\n  Grid,\n  Card,\n  CardContent,\n  LinearProgress,\n  Chip,\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n} from '@mui/material';\nimport {\n  CheckCircle,\n  Warning,\n  Error,\n  Speed,\n  Security,\n  Cloud,\n  Storage,\n  NetworkCheck,\n} from '@mui/icons-material';\nimport { useTrading } from '../context/TradingContext';\n\nfunction SystemHealth() {\n  const { state } = useTrading();\n\n  const healthMetrics = [\n    {\n      category: 'Trading Engine',\n      status: state.trading.isActive ? 'excellent' : 'good',\n      value: state.trading.isActive ? 100 : 85,\n      description: 'Core trading algorithms and execution engine',\n      components: [\n        { name: 'Signal Generation', status: 'online' },\n        { name: 'Position Sizing', status: 'online' },\n        { name: 'Risk Management', status: 'online' },\n        { name: 'Strategy Selection', status: state.trading.isActive ? 'online' : 'standby' },\n      ]\n    },\n    {\n      category: 'Network Infrastructure',\n      status: state.isConnected ? 'excellent' : 'poor',\n      value: state.isConnected ? 95 : 30,\n      description: 'RPC endpoints and blockchain connectivity',\n      components: [\n        { name: 'QuickNode RPC', status: state.isConnected ? 'online' : 'offline' },\n        { name: 'Helius RPC', status: state.isConnected ? 'online' : 'offline' },\n        { name: 'Jito Block Engine', status: 'online' },\n        { name: 'Jupiter API', status: 'online' },\n      ]\n    },\n    {\n      category: 'Security & Protection',\n      status: 'excellent',\n      value: 100,\n      description: 'MEV protection and transaction security',\n      components: [\n        { name: 'MEV Protection', status: 'online' },\n        { name: 'Bundle Execution', status: 'online' },\n        { name: 'Slippage Control', status: 'online' },\n        { name: 'Wallet Security', status: 'online' },\n      ]\n    },\n    {\n      category: 'Data & Analytics',\n      status: 'good',\n      value: 88,\n      description: 'Market data feeds and performance tracking',\n      components: [\n        { name: 'Price Feeds', status: 'online' },\n        { name: 'Market Data', status: 'online' },\n        { name: 'Performance Tracking', status: 'online' },\n        { name: 'Whale Monitoring', status: 'warning' },\n      ]\n    }\n  ];\n\n  const getStatusColor = (status) => {\n    switch (status) {\n      case 'excellent':\n        return 'success';\n      case 'good':\n        return 'info';\n      case 'warning':\n        return 'warning';\n      case 'poor':\n        return 'error';\n      default:\n        return 'default';\n    }\n  };\n\n  const getStatusIcon = (status) => {\n    switch (status) {\n      case 'online':\n        return <CheckCircle sx={{ color: 'success.main', fontSize: 16 }} />;\n      case 'warning':\n        return <Warning sx={{ color: 'warning.main', fontSize: 16 }} />;\n      case 'offline':\n        return <Error sx={{ color: 'error.main', fontSize: 16 }} />;\n      case 'standby':\n        return <Speed sx={{ color: 'info.main', fontSize: 16 }} />;\n      default:\n        return <CheckCircle sx={{ color: 'success.main', fontSize: 16 }} />;\n    }\n  };\n\n  const overallHealth = healthMetrics.reduce((acc, metric) => acc + metric.value, 0) / healthMetrics.length;\n\n  return (\n    <Box sx={{ flexGrow: 1, p: 3 }}>\n      {/* Header */}\n      <Box sx={{ mb: 4 }}>\n        <Typography variant=\"h4\" sx={{ fontWeight: 600, mb: 1 }}>\n          System Health Monitor\n        </Typography>\n        <Typography variant=\"body1\" sx={{ color: 'text.secondary' }}>\n          Comprehensive monitoring of all trading system components\n        </Typography>\n      </Box>\n\n      {/* Overall Health Summary */}\n      <Card sx={{ mb: 4 }}>\n        <CardContent>\n          <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 3 }}>\n            <Typography variant=\"h5\" sx={{ fontWeight: 600 }}>\n              Overall System Health\n            </Typography>\n            <Chip\n              label={`${overallHealth.toFixed(0)}% Operational`}\n              color={overallHealth >= 95 ? 'success' : overallHealth >= 80 ? 'info' : overallHealth >= 60 ? 'warning' : 'error'}\n              size=\"large\"\n              sx={{ fontWeight: 600 }}\n            />\n          </Box>\n          \n          <LinearProgress\n            variant=\"determinate\"\n            value={overallHealth}\n            sx={{\n              height: 12,\n              borderRadius: 6,\n              backgroundColor: 'rgba(0,0,0,0.1)',\n              '& .MuiLinearProgress-bar': {\n                borderRadius: 6,\n                backgroundColor: overallHealth >= 95 ? 'success.main' : \n                               overallHealth >= 80 ? 'info.main' : \n                               overallHealth >= 60 ? 'warning.main' : 'error.main'\n              }\n            }}\n          />\n          \n          <Box sx={{ display: 'flex', justifyContent: 'space-between', mt: 2 }}>\n            <Typography variant=\"body2\" color=\"text.secondary\">\n              System Performance Score\n            </Typography>\n            <Typography variant=\"body2\" sx={{ fontWeight: 600 }}>\n              {overallHealth.toFixed(1)}/100\n            </Typography>\n          </Box>\n        </CardContent>\n      </Card>\n\n      {/* Detailed Health Metrics */}\n      <Grid container spacing={3}>\n        {healthMetrics.map((metric, index) => (\n          <Grid item xs={12} md={6} key={index}>\n            <Card sx={{ height: '100%' }}>\n              <CardContent>\n                <Box sx={{ display: 'flex', justifyContent: 'space-between', alignItems: 'center', mb: 2 }}>\n                  <Typography variant=\"h6\" sx={{ fontWeight: 500 }}>\n                    {metric.category}\n                  </Typography>\n                  <Chip\n                    label={metric.status}\n                    color={getStatusColor(metric.status)}\n                    size=\"small\"\n                    sx={{ textTransform: 'capitalize' }}\n                  />\n                </Box>\n\n                <Typography variant=\"body2\" color=\"text.secondary\" sx={{ mb: 2 }}>\n                  {metric.description}\n                </Typography>\n\n                <Box sx={{ mb: 2 }}>\n                  <Box sx={{ display: 'flex', justifyContent: 'space-between', mb: 1 }}>\n                    <Typography variant=\"body2\" color=\"text.secondary\">\n                      Health Score\n                    </Typography>\n                    <Typography variant=\"body2\" sx={{ fontWeight: 600 }}>\n                      {metric.value}%\n                    </Typography>\n                  </Box>\n                  <LinearProgress\n                    variant=\"determinate\"\n                    value={metric.value}\n                    color={getStatusColor(metric.status)}\n                    sx={{\n                      height: 6,\n                      borderRadius: 3,\n                      backgroundColor: 'rgba(0,0,0,0.1)',\n                      '& .MuiLinearProgress-bar': {\n                        borderRadius: 3,\n                      }\n                    }}\n                  />\n                </Box>\n\n                <List dense>\n                  {metric.components.map((component, compIndex) => (\n                    <ListItem key={compIndex} sx={{ px: 0, py: 0.5 }}>\n                      <ListItemIcon sx={{ minWidth: 24 }}>\n                        {getStatusIcon(component.status)}\n                      </ListItemIcon>\n                      <ListItemText\n                        primary={\n                          <Typography variant=\"body2\" sx={{ fontSize: '0.875rem' }}>\n                            {component.name}\n                          </Typography>\n                        }\n                      />\n                      <Chip\n                        label={component.status}\n                        size=\"small\"\n                        variant=\"outlined\"\n                        sx={{ \n                          fontSize: '0.7rem', \n                          height: 20,\n                          textTransform: 'capitalize'\n                        }}\n                        color={\n                          component.status === 'online' ? 'success' :\n                          component.status === 'warning' ? 'warning' :\n                          component.status === 'offline' ? 'error' : 'info'\n                        }\n                      />\n                    </ListItem>\n                  ))}\n                </List>\n              </CardContent>\n            </Card>\n          </Grid>\n        ))}\n      </Grid>\n\n      {/* System Information */}\n      <Card sx={{ mt: 4 }}>\n        <CardContent>\n          <Typography variant=\"h6\" sx={{ fontWeight: 500, mb: 2 }}>\n            System Information\n          </Typography>\n          <Grid container spacing={2}>\n            <Grid item xs={12} sm={6} md={3}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Uptime\n              </Typography>\n              <Typography variant=\"body1\" sx={{ fontWeight: 600 }}>\n                {state.system.uptime || 0} minutes\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={6} md={3}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Total Trades\n              </Typography>\n              <Typography variant=\"body1\" sx={{ fontWeight: 600 }}>\n                {state.trading.totalTrades}\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={6} md={3}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Success Rate\n              </Typography>\n              <Typography variant=\"body1\" sx={{ fontWeight: 600 }}>\n                {state.trading.winRate.toFixed(1)}%\n              </Typography>\n            </Grid>\n            <Grid item xs={12} sm={6} md={3}>\n              <Typography variant=\"body2\" color=\"text.secondary\">\n                Last Update\n              </Typography>\n              <Typography variant=\"body1\" sx={{ fontWeight: 600 }}>\n                {state.system.lastUpdate ? new Date(state.system.lastUpdate).toLocaleTimeString() : 'Never'}\n              </Typography>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    </Box>\n  );\n}\n\nexport default SystemHealth;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}